프로젝트 이름
WHATNET

프로젝트 개요?
넷플릭스, 왓차같은 OTT 서비스 사이트
여기 멤버모집에서 결제 중개? (먹튀방지) 해주고
파티 모으는거 도움 -> 게시판 형식으로 모아줌

참고한 사이트
피클플러스 : 얘는 월 자동 결제, 근데 월 4900원으로 좀 비쌈, 파티매칭 유저가 직접하는게 아니라 사이트에서 자동으로, 사이트 새로 바뀌는 중인것 같음
벗츠 : 넷플릭스나 왓차같은 OTT 서비스뿐만 아니라 다른 것들도 많음, 게시판 형식으로 모집, 월단위로 결제 하는게 아니라 파티모집하는사람이 지정한 기간,가격 만큼


주요기능

각 OTT 서비스 사이트에서 독점하는 컨텐츠 jsoup로 긁어와서 보여주기

로그인, 회원가입
로그인할때는 이메일로 로그인 가능
로그인할때 일단 계획은 sns로그인(네이버 로그인 or 카카오 로그인) 가능하도록 구현 - 로그인하고나서 db에 어떻게 이 user의 정보를 저장해야할지는 아직 잘 모르겠음
회원가입때 휴대폰 인증 넣고싶었는데 돈들어서 일단 제외

굳이 실명은 필요없을것같아서 닉네임으로
프로필이미지 수업시간에 배웠으니 넣기

결제시스템 구현 못할 것 같아서 포인트로 대체구현
leader 제외한 다른 멤버는 party 들어갈때 point를 사용해야하고
파티 시작했을때 바로 leader에게 포인트 지급하는게 아닌 30일 후에 지급 (먹튀방지)

카테고리 관리하는 테이블 만들어서 OTT 사이트 추가할때 쉽도록 만들기

게시판 -> 파티 모집하는 게시판
회원은 누구든 글을 올릴 수 있음
글을 올릴때 파티 시작할 날짜, 종료할 날짜 지정할수 있음
결제방식도 한번에 종료날까지 다 받을지, 월 결제로 받을지 선택할 수 있음,
시작날짜 지나도 모집인원 다 안찼으면 파티신청할 수 있음, 단 이때는 종료날짜까지 30일 이상 안 남은 경우 남아있는 %만큼만 결제하도록
파티인원은 최대 4명까지, 글 올릴때 recruitNum 1은 무조건 올라가도록, recruitNum이 4가 되면 목록에서 안보이게끔 만들던가 isDel로 삭제처리

문의사항, 불만사항, 건의사항 올릴 수 있는 게시판 구현
익명으로 글 올리기 가능


게시판에서 올린 시작날짜가 지나거나 recruitNum이 4가 되면
DB에 t_party 등록
시작날짜가 되면 leader가 OTT 사이트 아이디,비번 등록
이 아이디 비번 파티원은 언제든지 사이트에서 확인 가능
파티 멤버가 바뀌면 user1,2,3 pk값을 바꿔주기
recruitNum이 4가되면 더이상 파티 모집 불가능
파티 멤버는 파티 탈퇴 가능
날짜로 %로 나눠서 사용한만큼만 결제되고 나머지는 돌려받기 가능



쪽지 기능
파티원끼리만 쪽지 보내고 받고 가능
패킷, 통신 이런거 못함
그래서 게시판하나 만들어서
userPk가 맞는경우에만 그 게시글 볼수있게끔해서 구현




CREATE TABLE t_user(
	userPk INT UNSIGNED AUTO_INCREMENT,
	userId VARCHAR(20) NOT NULL UNIQUE,
	userPw VARCHAR(100) NOT NULL,
	userMail VARCHAR(30) NOT NULL UNIQUE,
	regDt DATETIME DEFAULT NOW(),
	nickname VARCHAR(20) NOT NULL UNIQUE,
	profileImg VARCHAR(70),
	userPoint INT UNSIGNED,
	PRIMARY KEY(userPk)
);

CREATE TABLE t_board_manage(
	category INT UNSIGNED AUTO_INCREMENT,
	nm VARCHAR(20) NOT NULL,
	orderby INT UNSIGNED DEFAULT 0,
	PRIMARY KEY(category)
); 

CREATE TABLE t_party(
	partyPk INT UNSIGNED NOT NULL,
	leaderPk INT UNSIGNED,
	user1Pk INT UNSIGNED,
	user2Pk INT UNSIGNED,
	user3Pk INT UNSIGNED,
	partyId VARCHAR(20),
	partyPw VARCHAR(100),
	startDt DATE NOT NULL,
	endDt DATE NOT NULL,
	recruitNum INT(1) UNSIGNED NOT NULL DEFAULT 1 CHECK(recruitNum <= 4),
	PRIMARY KEY(partyPk, leaderPk),
	FOREIGN KEY (partyPk) REFERENCES t_board(partyPk),
	FOREIGN KEY (leaderPk) REFERENCES t_user(userPk),
	FOREIGN KEY (user1Pk) REFERENCES t_user(userPk),
	FOREIGN KEY (user2Pk) REFERENCES t_user(userPk),
	FOREIGN KEY (user3Pk) REFERENCES t_user(userPk)
);

CREATE TABLE t_board(
	boardPk INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
	category INT UNSIGNED NOT NULL,
	seq INT UNSIGNED NOT NULL,
	startDt DATE NOT NULL,
	endDt DATE NOT NULL,
	price INT UNSIGNED NOT NULL,
	recruitNum INT(1) UNSIGNED NOT NULL DEFAULT 1 CHECK(recruitNum <= 4),
	partyPk INT UNSIGNED NOT NULL UNIQUE,
	isDel INT(1) DEFAULT 0 CHECK (isDel IN (0, 1)),
	FOREIGN KEY (category) REFERENCES t_board_manage(category)
);

CREATE TABLE t_message(
	messagePk INT UNSIGNED PRIMARY KEY,
	sendUserPk INT UNSIGNED NOT NULL,
	receiveUserPk INT UNSIGNED NOT NULL,
	ctnt VARCHAR(2000) NOT NULL,
	regDt DATETIME DEFAULT NOW(),
	isDel INT(1) DEFAULT 0 CHECK (isDel IN (0, 1)),
	FOREIGN KEY (sendUserPk) REFERENCES t_user(userPk),
	FOREIGN KEY (receiveUserPk) REFERENCES t_user(userPk)
);

CREATE TABLE t_suggestion(
	suggestionPk INT UNSIGNED PRIMARY KEY,
	userPk INT UNSIGNED NOT NULL,
	title VARCHAR(100) NOT NULL,
	ctnt VARCHAR(2000) NOT NULL,
	regDt DATETIME DEFAULT NOW(),
	isDel INT(1) DEFAULT 0 CHECK (isDel IN (0, 1)),
	FOREIGN KEY (userPk) REFERENCES t_user(userPk)
);













파티pk, 파티멤버 따로 테이블 빼기
t_board, t_party 합칠지말지 고민해보기
point history table 만들기 - column으로 userpk, 입금, 출금, 결과






